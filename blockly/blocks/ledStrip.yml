---
ledStrip:
  global_variable:
    - "#define LED_STRIP_COUNT {LEDS}"
    - "#define LED_STRIP_TYPE 4"
    - "#define LED_STRIP_SWAP_RG 0"
    - "static uint32_t _twr_module_power_led_strip_dma_buffer[LED_STRIP_COUNT * LED_STRIP_TYPE * 2];"
    - const twr_led_strip_buffer_t led_strip_buffer = {{
    - .type = LED_STRIP_TYPE,
    - .count = LED_STRIP_COUNT,
    - .buffer = _twr_module_power_led_strip_dma_buffer
    - "}};"
    - static struct {{
    - enum {{
    - LED_STRIP_SHOW_COLOR = 0,
    - LED_STRIP_SHOW_COMPOUND = 1,
    - LED_STRIP_SHOW_EFFECT = 2,
    - LED_STRIP_SHOW_THERMOMETER = 3
    - "}} show;"
    - twr_led_strip_t self;
    - uint32_t color;
    - struct {{
    - uint8_t data[TWR_RADIO_NODE_MAX_COMPOUND_BUFFER_SIZE];
    - int length;
    - "}} compound;"
    - "struct {{"
    - float temperature;
    - int8_t min;
    - int8_t max;
    - uint8_t white_dots;
    - float set_point;
    - uint32_t color;
    - "}} thermometer;"
    - twr_scheduler_task_id_t update_task_id;
    - "}} led_strip = {{ .show = LED_STRIP_SHOW_COLOR, .color = 0 }};"
    - void led_strip_update_task(void *param) {{
    - (void) param;
    - if (!twr_led_strip_is_ready(&led_strip.self)) {{
    - twr_scheduler_plan_current_now();
    - return;
    - "}}"
    - twr_led_strip_write(&led_strip.self);
    - twr_scheduler_plan_current_relative(250);
    - "}}"
  application_init:
    block:
      text:
        - Initialize LED Strip %1
        - Number of LEDs %2
      arguments:
        NEW_LINE:
          type: new_line
        LEDS:
          type: dropdown
          options:
            - ["36", "36"]
            - ["72", "72"]
            - ["144", "144"]
    code:
      - twr_led_strip_init(&led_strip.self, twr_module_power_get_led_strip_driver(), &led_strip_buffer);
      - led_strip.update_task_id = twr_scheduler_register(led_strip_update_task, NULL, 0);
